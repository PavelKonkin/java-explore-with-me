CREATE TABLE IF NOT EXISTS categories
(
    category_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255)                            NOT NULL,
    CONSTRAINT uq_category_name UNIQUE (name),
    CONSTRAINT pk_category PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS users
(
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name    VARCHAR(255)                            NOT NULL,
    email   VARCHAR(255)                            NOT NULL,
    CONSTRAINT uq_email UNIQUE (email),
    CONSTRAINT pk_user PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS locations
(
    location_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat         FLOAT,
    lon         FLOAT,
    CONSTRAINT pk_loc PRIMARY KEY (location_id)
);

CREATE TABLE IF NOT EXISTS events
(
    event_id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation         VARCHAR(2000)                           NOT NULL,
    description        VARCHAR(7000)                           NOT NULL,
    title              VARCHAR(120)                            NOT NULL,
    paid               BOOLEAN,
    request_moderation BOOLEAN,
    participant_limit  INT                                     NOT NULL,
    location_id        BIGINT                                  NOT NULL,
    category_id        BIGINT                                  NOT NULL,
    event_date         TIMESTAMP WITHOUT TIME ZONE,
    created_on         TIMESTAMP WITHOUT TIME ZONE,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    state              VARCHAR(20),
    initiator_id       BIGINT                                  NOT NULL,
    CONSTRAINT fq_location FOREIGN KEY (location_id) REFERENCES locations (location_id),
    CONSTRAINT fq_category FOREIGN KEY (category_id) REFERENCES categories (category_id),
    CONSTRAINT fq_user FOREIGN KEY (initiator_id) REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT pk_event PRIMARY KEY (event_id)
);

CREATE TABLE IF NOT EXISTS compilations
(
    compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title         VARCHAR(50) NOT NULL ,
    pinned         BOOLEAN,
    CONSTRAINT uq_compilation_name UNIQUE (title),
    CONSTRAINT pk_compilation PRIMARY KEY (compilation_id)
);

CREATE TABLE IF NOT EXISTS event_compilation
(
    event_id       BIGINT NOT NULL,
    compilation_id BIGINT NOT NULL,
    CONSTRAINT event_compilation_pk
        PRIMARY KEY (event_id, compilation_id),
    CONSTRAINT event_compilation_event_id_fk
        FOREIGN KEY (event_id) REFERENCES events (event_id)
            ON DELETE CASCADE,
    CONSTRAINT event_compilation_compilation_id_fk
        FOREIGN KEY (compilation_id) REFERENCES compilations (compilation_id)
            ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS participation_requests
(
    participation_request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id                 BIGINT                                  NOT NULL,
    created                  TIMESTAMP WITHOUT TIME ZONE,
    status                   VARCHAR(20),
    requester_id             BIGINT                                  NOT NULL,
    CONSTRAINT fq_event FOREIGN KEY (event_id) REFERENCES events (event_id) ON DELETE CASCADE,
    CONSTRAINT fq_requester FOREIGN KEY (requester_id) REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT uq_request UNIQUE (event_id, requester_id),
    CONSTRAINT pk_participation_request PRIMARY KEY (participation_request_id)
);

CREATE TABLE IF NOT EXISTS event_user_like
(
    event_id BIGINT NOT NULL,
    user_id  BIGINT NOT NULL,
    CONSTRAINT event_user_like_pk
        PRIMARY KEY (event_id, user_id),
    CONSTRAINT event_user_like_event_id_fk
        FOREIGN KEY (event_id) REFERENCES events (event_id)
            ON DELETE CASCADE,
    CONSTRAINT event_user_like_user_id_fk
        FOREIGN KEY (user_id) REFERENCES users (user_id)
            ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS event_user_dislike
(
    event_id BIGINT NOT NULL,
    user_id  BIGINT NOT NULL,
    CONSTRAINT event_user_dislike_pk
        PRIMARY KEY (event_id, user_id),
    CONSTRAINT event_user_dislike_event_id_fk
        FOREIGN KEY (event_id) REFERENCES events (event_id)
            ON DELETE CASCADE,
    CONSTRAINT event_user_dislike_user_id_fk
        FOREIGN KEY (user_id) REFERENCES users (user_id)
            ON DELETE CASCADE
);